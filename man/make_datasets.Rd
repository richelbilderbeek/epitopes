% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_datasets.R
\name{make_datasets}
\alias{make_datasets}
\title{Build organism-specific data sets for training epitope prediction models}
\usage{
make_datasets(
  epitopes,
  proteins,
  taxonomy_list,
  orgIDs = NULL,
  hostIDs = NULL,
  removeIDs = NULL,
  save_folder = "./",
  min_epit = 8,
  max_epit = 25,
  only_exact = FALSE,
  pos.mismatch.rm = "all",
  set.positive = "mode",
  window_size = 2 * min_epit - 1,
  max.N = 2,
  split_level = "prot",
  split_perc = c(75, 25),
  split_names = c("01_training", "02_holdout"),
  coverage_threshold = 80,
  identity_threshold = 80,
  ncpus = 1
)
}
\arguments{
\item{epitopes}{data frame of epitope data (returned by \code{\link[=get_LBCE]{get_LBCE()}}).}

\item{proteins}{data frame of protein data (returned by \code{\link[=get_proteins]{get_proteins()}}).}

\item{taxonomy_list}{list containing taxonomy information
(generated by \code{\link[=get_taxonomy]{get_taxonomy()}})}

\item{orgIDs}{vector of organism/taxon IDs to retain (see
\code{\link[=filter_epitopes]{filter_epitopes()}}). If \code{NULL} then no organism ID  filtering is
performed.}

\item{hostIDs}{vector of host IDs to retain  (see \code{\link[=filter_epitopes]{filter_epitopes()}}).
If \code{NULL} then no host filtering is performed.}

\item{removeIDs}{vector of organism IDs to remove (see \code{\link[=filter_epitopes]{filter_epitopes()}}).
Useful for, e.g., using a Class-level \code{orgIDs} and removing some species
or genera. If \code{NULL} then no removal is performed.}

\item{save_folder}{path to folder for saving the results.}

\item{min_epit}{positive integer, shortest epitope to be considered}

\item{max_epit}{positive integer, longest epitope to be considered}

\item{only_exact}{logical, should only sequences labelled as "Exact Epitope"
in variable \emph{epit_struc_def} (within \code{epitopes}) be considered?}

\item{pos.mismatch.rm}{should epitopes with position mismatches be removed?
Use "all" (default) for removing any position mismatch or "align"
if the routine should attempt to
search the epitope sequence in the protein sequence.}

\item{set.positive}{how to decide whether an observation should be of the
"Positive" (+1) class? Use "any" to set a sequence as positive if
$n_positive > 0$, "mode" to set it if $n_positive >= n_negative$,
or "all" to set it if $n_negative == 0$. Defaults to "mode".}

\item{window_size}{positive integer, size of window to use.}

\item{max.N}{maximum length of N-peptide frequency features to be calculated.}

\item{split_level}{which level should be used for splitting? Use "org" for
splitting by source organism ID, "prot" by protein ID or "epit" by
epitope ID. When "prot" is used the routine attempts to identify
different protein versions and treat them as a single unit for
splitting purposes.}

\item{split_perc}{numeric vector of desired splitting percentages. See
Details.}

\item{split_names}{optional character vector with short names for each split.}

\item{coverage_threshold}{coverage threshold for grouping proteins by
similarity, see Details.}

\item{identity_threshold}{identity threshold for grouping proteins by
similarity, see Details.}

\item{ncpus}{number of cores to use for data windowing and feature
calculation.}
}
\value{
List containing the resulting datasets.
}
\description{
This function extracts organism or taxon-specific datasets from IEDB data
and returns data sets for the development and assessment of epitope
prediction models.
}
\section{Data splitting and BLAST requirements}{

If the sum of \code{split_perc} is less than 100 an extra split is generated
with the remaining observations - e.g., \code{split_perc = c(50, 30)} results in
three sets with an approximately 50/30/20\% split \emph{of the total observations.}
If the sum is greater than 100 the splits are linearly scaled down so that
the sum becomes 100. Note that the split percents correspond to the number of
observations, not the number of unique IDs.

This function will attempt to approximate the desired split levels, but
depending on the size of the data set and the desired \code{split_level} it may
not be possible (e.g., if \code{split_level = "org"} and a single organism
corresponds to 90\% of the data, one of the splits will necessarily correspond
to at least 90\% of the data, regardless of the values informed in
\code{split_perc}).

If \verb{split_level == "prot} the routine will keep any pairs of proteins
having (coverage >= \code{coverage_threshold} AND
identity >=  \code{identity_threshold}) under the same split. This is useful to
prevent accidental data leakage due to quasi-identical proteins with
different UIDs.
\strong{NOTE}: this will require BLAST+ to be installed in your
local machine. For details on how to set up BLAST+ on your machine, check
\url{https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download}.
This function was developed using package \verb{blast 2.10.0}.
}

\author{
Felipe Campelo (\email{f.campelo@aston.ac.uk})
}
