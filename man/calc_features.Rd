% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_features.R
\name{calc_features}
\alias{calc_features}
\title{Calculate features for epitope prediction}
\usage{
calc_features(
  peptides.list,
  peptide.features = list(),
  protein.features = list(),
  ncpus = 1
)
}
\arguments{
\item{peptides.list}{list object returned by \code{\link[=make_data_splits]{make_data_splits()}}.}

\item{peptide.features, protein.features}{lists of features to be calculated
at the peptide/protein level. See \strong{Feature Lists} for details.}

\item{ncpus}{positive integer, number of cores to use.}
}
\value{
Updated \code{peptides.list} object, with features calculated for element
\code{peptides.list$df}.
}
\description{
This function is used to calculate several distinct families of features for
epitope prediction.
}
\details{
Two major types of features can be calculated:
\itemize{
\item \emph{local features}, which are calculated based on the local
neighbourhood of each AA position (column \emph{Info_window} of the windowed
data frame).
\item \emph{global features}, which are calculated using the full sequence
of the protein (listed in column \emph{Info_protein_id}  of the windowed
data frame)
}

All features are calculated based on the implementations available in package
\href{https://cran.r-project.org/package=protr}{\strong{protr}}. As of August 2021,
the following groups of features were available (see the
\href{https://cran.r-project.org/web/packages/protr/vignettes/protr.html#3_package_overview}{package vignette}
for details):
\itemize{
\item "AAC" - Amino acid composition
\item "DC"  - Dipeptide composition
\item "TC"  - Tripeptide composition
\item  Autocorrelation:
\itemize{
\item "MoreauBroto" - Normalized Moreau-Broto autocorrelation
\item "Moran" - Moran autocorrelation
\item "Geary" - Geary autocorrelation
}
\item  CTD descriptors:
\itemize{
\item "CTDC" - Composition
\item "CTDT" - Transition
\item "CTDD" - Distribution
}
\item "CTriad" - Conjoint triad descriptors
\item  Quasi-sequence-order descriptors:
\itemize{
\item "SOCN" - Sequence-order-coupling number
\item "QSO" - Quasi-sequence-order descriptors
}
\item  Pseudo-amino acid composition:
\itemize{
\item "PAAC" - Pseudo-amino acid composition (PseAAC)
\item "APAAC" - Amphiphilic pseudo-amino acid composition (APseAAC)
}
\item  Profile-based descriptors:
\itemize{
\item "PSSM"
\item "PSSMAcc"
\item "PSSMFeature"
}
\item Proteochemometric Modeling descriptors:
\itemize{
\item "ScalesGap" - Scales-based descriptors derived by Principal
Components Analysis
\item "ProtFPGap" - Scales-based descriptors derived by amino acid
properties from AAindex (a.k.a. Protein Fingerprint)
\item "DescScales" - Scales-based descriptors derived by 20+ classes
of 2D and 3D molecular descriptors (Topological, WHIM, VHSE, etc.)
\item "FAScales" - Scales-based descriptors derived by Factor Analysis
\item "MDSScales" - Scales-based descriptors derived by
Multidimensional Scaling
\item "BLOSUM" - BLOSUM and PAM matrix-derived descriptors
}
}

Each of these groups may be used either at the peptide or the protein level -
which does not mean it \emph{should} be. The \strong{protr} documentation provides
the following warning: "\emph{Users need to intelligently evaluate the underlying}
\emph{details of the descriptors provided, instead of using protr with their data}
\emph{blindly, especially for the descriptor types with more flexibility. It}
\emph{would be wise for the users to use some negative and positive control}
\emph{comparisons where relevant to help guide interpretation of the results.}".
Users should be savvy when choosing which features to use for epitope
prediction, and the choice should ideally be guided by domain expertise.
\strong{IMPORTANT}: if the splitting level intended to be used for modelling is
"peptide" (this can be checked in \code{peptides.list$splits.attrs$split_level})
then protein-level features should be avoided, as they can result in data
leakage across splits and contaminate performance calculations.
}
\section{\strong{Feature Lists}}{

Input lists \code{peptide.features} and \code{protein.features} are used to define
which features are calculated at either level. These input parameters must be
named list vectors, where each element is itself a list with the name of the
feature group the user wants to compute, and elements corresponding to the
desired parameters to be passed down to the feature calculation routines.
For more information on the parameters needed for any feature group, check
\code{?protr::extractXYZ}, replacing \code{XYZ} by the group abbreviation (see
\strong{Details} or the documentation of the \strong{protr} package for the list of
available feature groups).

For instance, suppose the user wants to calculate the
\emph{Amino Acid Composition}, "AAC" (no parameters required) and the
\emph{Pseudo Amino Acid Composition}, "PAAC" (up to four optional parameters -
assume that the user wants to set parameter \code{lambda = 50}), at the peptide
level. In this case, \code{peptide.features} should be:\preformatted{peptide.features = list(AAC = list(), PAAC = list(lambda = 50))
}
}

\author{
Felipe Campelo (\email{f.campelo@aston.ac.uk})
}
