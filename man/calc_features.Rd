% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_features.R
\name{calc_features}
\alias{calc_features}
\title{Calculate features for epitope prediction}
\usage{
calc_features(
  peptides.list,
  local.features = character(),
  global.features = character(),
  ncpus = 1
)
}
\arguments{
\item{peptides.list}{list object returned by \code{\link[=make_data_splits]{make_data_splits()}}.}

\item{local.features}{list of features to be calculated
at the local neighbourhood (\code{peptides.list$df$Info_window}) level.}

\item{global.features}{lists of features to be calculated
at the global level (\code{peptides.list$proteins$TSeq_sequence}).
See \strong{Feature Lists} for details.}

\item{ncpus}{positive integer, number of cores to use.}
}
\value{
Updated \code{peptides.list} object, with local features added as columns
to \code{peptides.list$df}, and global features added as columns to
\code{peptides.list$proteins}.
}
\description{
This function is used to calculate several distinct families of features for
epitope prediction.
}
\details{
Two major types of features can be calculated:
\itemize{
\item \emph{local features}, which are calculated based on the local
neighbourhood of each AA position (column \emph{Info_window} of the windowed
data frame).
\item \emph{global features}, which are calculated using the full sequence
of the protein (listed in column \emph{TSeq_sequence}  of the protein
data frame).
}

The following features are calculated based on the implementations available
in package
\href{https://cran.r-project.org/package=protr}{\strong{protr}}. As of August 2021,
the following groups of features are supported by the \strong{epitopes} package
(see the \href{https://cran.r-project.org/web/packages/protr/vignettes/protr.html#3_package_overview}{protr vignette}
for details on each of these):
\itemize{
\item "AAC" - Amino acid composition
\item "DC"  - Dipeptide composition
\item "TC"  - Tripeptide composition
\item  CTD descriptors:
\itemize{
\item "CTDC" - Composition
\item "CTDT" - Transition
\item "CTDD" - Distribution
}
\item "CTriad" - Conjoint triad descriptors
\item  Quasi-sequence-order descriptors:
\itemize{
\item "SOCN" - Sequence-order-coupling number (with maximum lag \code{nlag = 3})
\item "QSO" - Quasi-sequence-order descriptors (with maximum lag \code{nlag = 3} and weighting factor \code{w = 0.1})
}
\item Proteochemometric Modeling descriptors:
\itemize{
\item "ScalesGap" - Scales-based descriptors derived by Principal
Components Analysis (using all properties in the \code{protr::AAindex} matrix, \code{pc = 5} and \code{lag = 3})
\item "BLOSUM" - BLOSUM -derived descriptors (with \code{submat = "AABLOSUM62"}, \code{k = 5} and \code{lag = 3})
}
}

\strong{NOTE}: in all feature groups except "ScalesGap", invalid AA codes
(B, J, O, U, X, Y) are removed from the strings prior to feature calculation.
In "ScalesGap" these codes are replaced by a gap indicator, "-".

Besides those, the following features are also available based on native
implementations:
\itemize{
\item "Entropy" - the Shannon entropy of a sequence.
\item "Atoms" - the number of C, H, N, O, S atoms in the sequence
\item "MolWeight" - the total molecular weight of the sequence
\item "AAtypes" - the proportion of AAs of each type (acidic, aliphatic, acidic, etc.)
}

Each feature group may be used either at the local or global level -
which does not mean it \emph{should} be. The \strong{protr} documentation provides
the following warning: "\emph{Users need to intelligently evaluate the underlying}
\emph{details of the descriptors provided, instead of using protr with their data}
\emph{blindly, especially for the descriptor types with more flexibility. It}
\emph{would be wise for the users to use some negative and positive control}
\emph{comparisons where relevant to help guide interpretation of the results.}".
Users should therefore be savvy when choosing which features to use for epitope
prediction, and the choice should ideally be guided by domain expertise.
Certain feature groups may not make sense as local features,
as the (usually very short) local substrings will not allow the features to
be informative (e.g., tripeptide composition, "TC"); or may require
specific overriding of standard parameters (e.g., parameter
\code{lambda} for "PAAC" must be smaller than the length of the shortest local
string).

\strong{IMPORTANT}: if the splitting level intended to be used for modelling is
"peptide" (this can be checked in \code{peptides.list$splits.attrs$split_level})
then protein-level features should be avoided, as their use can result in
data leakage across splits and contaminate performance calculations.
}
\section{\strong{Feature Vectors}}{

Input vectors \code{local.features} and \code{global.features} are used to define
which features are calculated at either level. These input parameters must be
character vectors, where each element is one of the names listed in
\strong{Details}. For more information on the features calculated by \strong{protr},
check \code{?protr::extractXYZ}, replacing \code{XYZ} by the group abbreviation (see
\strong{Details} or the documentation of the \strong{protr} package for the list of
available feature groups). Notice that, for consistency purposes, the user
parameters of all \strong{protr} features are kept fixed in this routine.
If the user wishes to add other features (or the same features with distinct
parameters) they can calculate those separately
and bind them to \code{peptides.list$df} (for local features) or
\code{peptides.list$proteins} (for global ones). All feature columns should have
names starting with "feat_local_" or "feat_global_".
}

\author{
Felipe Campelo (\email{f.campelo@aston.ac.uk})
}
